<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.spring.homeshare.HouseMapper">

	<!-- 기본규칙 value : '_' 사용 , name : 카멜케이스 -->


	<!-- 기본 select문 -->
	<!-- 하우스번호, 숙소타입, 제목, 내용 -->
	<select id="select_by_title" resultType="HouseVO">
		select * from ${house}
		where ${title}= #{title}
	</select>

	<select id="select_all" resultType="HouseVO">
		select * from ${house}
	</select>

	<select id="select_by_houseno" resultType="houseVO">
		select * from ${house}
		where ${houseNo} = #{houseNo}
	</select>

	<!-- memno 기준으로 모든 하우스 정보를 가져오는 쿼리 -->
	<select id="select_all_by_memno" resultType="houseVO"
		parameterType="int">
		select * from ${house} where ${memNo} = #{memNo}
	</select>

	<!-- memno 기준으로 1개의 하우스 정보를 가져오는 쿼리 -->
	<select id="select_by_memno" resultType="houseVO"
		parameterType="int">
		select * from ${house} where ${memNo} = #{memNo}
	</select>



	<!-- 검색 쿼리 영역 기본값 location -->
	<!-- location -->
	<select id="select_by_location" resultType="houseVO">
		<!-- SELECT * FROM house WHERE location LIKE '%수원%'; -->
		SELECT * FROM ${house} WHERE ${location} LIKE '%#{location}%'
	</select>

	<!-- 다중쿼리문 -->
	<select id="multy_select" parameterType="java.util.HashMap"
		resultType="houseVO">
		SELECT * FROM ${house}
		<where>
			<if test='location != null and location != ""'>
			location like '%' || #{location} || '%'
			</if>
			<if test='bookableDateBegin != null and bookableDateBegin != ""'>
				AND ${bookableDateBegin} <![CDATA[>=]]>
				#{bookableDateBegin}
			</if>
			<if test='bookableDateEnd != null and bookableDateEnd != ""'>

				AND ${bookableDateEnd} <![CDATA[<=]]>
				#{bookableDateEnd}
			</if>
			<if test="#{maxCapacity} != null">
				AND ${maxCapacity} <![CDATA[>=]]>
				#{maxCapacity}
			</if>
		</where>
	</select>

	<!-- 페이징 처리 -->
	<select id="paging" resultType="houseVO">
		select
		*
		from (
		select rownum rn,
		a.*
		from (
		select * from house order by
		${houseNo} desc
		) a
		) b
		where rn
		between #{start} and #{end}
	</select>

	<!-- 페이지 처리 + 다중검색 -->
	<select id="paging_multy_select" resultType="houseVO"
		parameterType="java.util.HashMap">
		select
		*
		from (
		select rownum rn,
		a.*
		from (
		<!-- 다중검색 start -->
		SELECT * FROM ${house} where ${houseNo} = ${houseNo}
		<choose>
			<when test="location != null &amp;&amp; ''.equals(location)">
				and location like '%' || #{location} || '%'
			</when>
			<when test="bookableDateBegin != null &amp;&amp; ''.equals(bookableDateBegin)">
				AND ${bookableDateBegin} <![CDATA[>=]]>
				#{bookableDateBegin}
			</when>
			<when test="bookableDateEnd != null &amp;&amp; ''.equals(bookableDateEnd)">
				AND ${bookableDateEnd} <![CDATA[<=]]>
				#{bookableDateEnd}
			</when>
			<when test="maxCapacity != null &amp;&amp; ''.equals(maxCapacity)">
				AND ${maxCapacity} <![CDATA[<=]]>
				maxCapacity
			</when>
		</choose>
		<!-- 다중검색 end -->
		) a
		) b
		where rn
		between #{start} and #{end}
	</select>



	<select id="total_count" resultType="Integer">
		select count(*) total_cnt
		from ${house}
	</select>

	<!-- houseno의 최대값 -> 시퀸스 값을 리턴하는 sql -->
	<select id="select_max_houseNo" resultType="Integer">
		SELECT ${houseNo}
		FROM ${house}
		WHERE ${houseNo} = (SELECT max(${houseNo}) FROM ${house})
	</select>



	<select id="total_count_multy_select" resultType="Integer">
		select count(*) total_cnt
		from ${house}
		<where>
			location like '%' || #{location} || '%'
			<if test='bookableDateBegin != null and bookableDateBegin != ""'>
				AND ${bookableDateBegin} <![CDATA[>=]]>
				#{bookableDateBegin}
			</if>
			<if test='bookableDateEnd != null and bookableDateEnd != ""'>

				AND ${bookableDateEnd} <![CDATA[<=]]>
				#{bookableDateEnd}
			</if>
			<if test="#{maxCapacity} != null">
				AND ${maxCapacity} <![CDATA[<=]]>
				maxCapacity
			</if>
		</where>
	</select>

	<!-- 4가지 변수중에서 단일검색 -->
	<select id="select_single" parameterType="java.util.HashMap"
		resultType="houseVO">
		select * from house where ${option} = #{number}
	</select>







	<!-- select count house의 memno 구하기 -->
	<select id="selectcount_house_by_memno_no" resultType="Integer">
		SELECT
		COUNT(*)
		FROM ${house}
		where ${memNo} = #{memNo}
	</select>

	<!-- 입력 -->
	<insert id="insert">
		insert into ${house}
		values(
		#{houseNo},
		#{type},
		#{scope},
		#{maxCapacity},
		#{bedroom},
		#{bed},
		#{bathroom},
		#{utilities},
		#{spaces},
		#{title},
		#{info},
		#{rules},
		#{checkinTime},
		#{checkoutTime},
		#{stayNight},
		#{stayDay},
		#{bookableDateBegin},
		#{bookableDateEnd},
		#{price},
		#{memNo},
		#{replies},
		#{image,  jdbcType=VARCHAR},
		#{checkinInterval},
		#{score},
		#{location},
		#{reportCount},
		#{hostId}
		)
		<selectKey keyProperty="houseNo" resultType="Integer"
			order="BEFORE">
			SELECT house_pk.nextval FROM dual
		</selectKey>
	</insert>



	<update id="update">
		update
		${house} set
		${type} = #{type},
		${scope} =
		#{scope},
		${maxCapacity} = #{maxCapacity},
		${bedroom} = #{bedroom},
		${bed} = #{bed},
		${bathroom} =#{bathroom},
		${utilities} =#{utilities},
		${spaces} =#{spaces},
		${title} =#{title},
		${info} =#{info},
		${rules}
		=#{rules},
		${checkinTime} =#{checkinTime},
		${checkoutTime} =#{checkoutTime},
		${stayNight} =#{stayNight},
		${stayDay} =#{stayDay},
		${bookableDateBegin}
		=#{bookableDateBegin},
		${bookableDateEnd} =#{bookableDateEnd},
		${price}
		=#{price},
		${replies} =#{replies},
		${image} =#{image},
		${checkinInterval} =#{checkinInterval},
		${score} =#{score},
		${location}
		=#{location},
		${reportCount} = #{reportCount},
		${hostId} = #{hostId}
		where
		${houseNo} = #{houseNo}

	</update>

	<delete id="delete">
		delete from ${house}
		where ${houseNo} = #{houseNo}

	</delete>

</mapper>
