<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!-- 리플 모달 -->

<button type="button" class="btn navbar-nav navbar-right"
	data-toggle="modal" data-target="#replyInputModal">댓글 입력하기</button>


<form class="modal" id="replyInputModal" action="/homeshare/replies"
	method="post">
	<div class="modal-dialog">
		<div class="modal-content">
			<!-- modal head -->
			<div class="modal-header">
				<h4 class="modal-title">후기 작성하기</h4>
				<button type="button" class="close" data-dismiss="modal">&times;</button>
			</div>
			<!-- modal body -->
			<div class="form-group">
				<div class="container">
					<label class="col-md-3">${memId }</label>


					<textarea class="form-control" id="content" rows="3"></textarea>
					<div class="row">
						<input type="number" class="col-md-4" min="0" max="5"
							id="cleanScore" placeholder="청결도(5)">
						<input type="number" class="col-md-4" min="0" max="5"
							id="checkinScore" placeholder="체크인점수">
					</div>
				</div>
			</div>

			<!-- modal footer -->
			<div class="modal-footer">
				<button type="submit" class="btn" id="modalSubmit">작성</button>
				<button type="button" class="btn " data-dismiss="modal">close</button>
			</div>
		</div>
	</div>
</form>


<!-- 리플 영역 -->

<hr>
<div id="showReply" class="container-fluid border">
	총
	<div id="countReply" class="d-inline"></div>
	개의 후기가 있습니다.
</div>
<hr>
<div id="replies" style="display: none"></div>

<hr>
<div class="sessionchk">
	<button type="submit" id="btn_update">수정</button>
	<button type="submit" id="btn_delete">삭제</button>
</div>

<script type="text/javascript">
	$(document)
			.ready(
					function() {

						var houseNo = '${houseVO.houseNo}';
						//댓글 모달 영역

						getAllReplies();
						// 댓글 입력 기능
						$('#modalSubmit').click(function() {
							
							event.preventDefault();
							var content = $('#content').val(); // 댓글 내용 값
							var memId = '${memId}'; // 댓글 아이디 값
							var regdate = null;
							var cleanScore = $('#cleanScore').val(); // 클린점수
							console.log('ceanScope : ' + cleanScore);

							var checkinScore = $('#checkinScore').val(); // 클린점수
							var obj = {
								'rno' : 0,
								'houseNo' : houseNo,
								'content' : content,
								'memId' : memId,
								'regdate' : null,
								'score' : 0,
								'cleanScore' : cleanScore,
								'checkinScore' : checkinScore
							}; // end var obj

							// $.ajax로 송신
							$.ajax({
								type : 'post',
								url : '/homeshare/replies',
								headers : {
									'Content-Type' : 'application/json',
									'X-HTTP-Method-Override' : 'POST'
								},
								data : JSON.stringify(obj),
								success : function(result, status) {
									console.log(result);
									console.log(status);
									if (result == 1) {
										alert('댓글 입력 성공');
										$('#content').val(''); // 성공메시지 이후 삽입했던 content 데이터 삭제
										$('#memId').val(''); // 성공메시지 이후 삽입했던 memid 데이터 삭제
										$('#cleanScore').val('');
										$('#checkinScore').val('');
										getAllReplies(); // 메소드 호출
									} // end if()
								} // end success

							}); // end ajax()
							$("#replyInputModal .close").click(); //모달창 닫기
						
						}); // end btn_add.click()

						function getAllReplies() {
							var url = '/homeshare/replies/all/' + houseNo;
							console.log(url);
							$
									.getJSON(
											url,
											function(jsonData) {
												var list = '';
												var replyCount = jsonData.length;
												console.log("댓글 개수 : "
														+ replyCount);
												$(jsonData)
														.each(
																function() {
																	console
																			.log("댓글번호 : "
																					+ this.rno);

																	var date = new Date(
																			this.regdate);
																	console
																			.log(date
																					.getFullYear()
																					+ "년"
																					+ date
																							.getMonth()
																					+ "월");
																	console
																			.log(this.memId);
																	console
																			.log('${memId}');
																	console
																			.log(this.memId == '${memId}');

																	list += '<div class="container-fluid border">'
																		
																			+ '<input type="hidden" id="rno" readonly value="' + this.rno + '" /><br>'
																			
																			+ '<div class="row">'
																		
																			+ '<div id="reply_memid" class="row border">' + this.memId +'</div>'
																			+ '<div id="reply_date" class="row border">' + date.getFullYear() + '년'
																			+ date.getMonth()
																			+ '월' +'</div>'
																			+ '</div>'
																			+ '<div class="row">'
																			+ '<div class="col-md-4>' 
																			+'<div class="border" id="reply_content">' + this.content + '</div>'
																			+ '</div>'
																			+ '</div>'
																			+ '<div class="row">'
																			+ '<div class="col-md-4 border">'
																			+ '<div> 총 만족도' + this.replyScore + '</div>'
																			+ '<div> 청결 만족도 ' + this.cleanScore + '</div>'
																			+ '<div> 체크인 만족도' + this.checkinScore + '</div>'
																			+'</div>'
																			+'</div>'
																			+ '</div>';

																	if (this.memId === '${memId}') {
																		console
																				.log('this.memid'
																						+ this.memId);
																		list += '<button class="btn_update" type="button">수정</button>'
																				+ '&nbsp;'
																				+ '<button class="btn_delete" type="button">삭제</button>'
																	}
																			+ '<hr>'
																			+ '</div>';
																});//end each
												$('#replies').html(list);
												$('#countReply').html(
														replyCount);
												$('#showReply')
														.click(
																function() {
																	if ($(
																			"#replies")
																			.css(
																					"display") == "none") {
																		jQuery(
																				'#replies')
																				.show();
																		//$('#showReply').html("숨기기");
																	} else {
																		jQuery(
																				'#replies')
																				.hide();
																		//$('#showReply').html("보이기");
																	}
																})// end click
											}//end callback
									);// end getJSON
						}//end getAllReplies

						// 수정 버튼 클릭하면 선택된 댓글 수정
						$('#replies')
								.on(
										'click',
										'.reply_item .btn_update',
										function() { // click는 메소드 기능. function은 눌렀을 때 뭘 할것인가
											// console.log(this);

											// 선택된 댓글 pre영역의 rno, content 값을 읽음
											var rno = $(this).prevAll('#rno')
													.val(); // this에 update이전 것 중에 rno를 찾겠다
											var content = $(this).prevAll(
													'#reply_content').val();
											console.log("선택된 댓글 번호 : " + rno
													+ ", 댓글 내용 : " + content);
											var cleanScore = $(this).prevAll(
													'#reply_cleanScore').val();
											console.log('reply_cleanScore : '
													+ cleanScore);
											var checkinScore = $(this).prevAll(
													'#reply_checkinScore')
													.val();
											console.log('reply_checkinScore : '
													+ checkinScore);
											var regdate = null;
											// ajax 요청
											$
													.ajax({
														type : 'put',
														url : '/homeshare/replies/'
																+ rno,
														headers : {
															'Content-Type' : 'application/json',
															'X-HTTP-Method-Override' : 'PUT'
														},
														data : JSON
																.stringify({
																	'content' : content,
																	'regdate' : 0,
																	'cleanScore' : cleanScore,
																	'checkinScore' : checkinScore
																}),
														success : function(
																result) {
															if (result == 'success') {
																alert('댓글 수정성공');

																getAllReplies();
															} // end if()
														}// end success()

													}); // end ajax()
										}); // end btn_update.click()

						// 삭제 버튼을 클릭하면 선택된 댓글 삭제
						$('#replies')
								.on(
										'click',
										'.reply_item .btn_delete',
										function() { // click는 메소드 기능. function은 눌렀을 때 뭘 할것인가
											// console.log(this);

											var rno = $(this).prevAll('#rno')
													.val();
											var content = $(this).prevAll(
													'#reply_content').val();
											console.log("선택된 댓글 번호 : " + rno
													+ ", 댓글 내용 : " + content);

											// ajax 요청
											$
													.ajax({
														type : 'delete',
														url : '/homeshare/replies/'
																+ rno,
														headers : {
															'Content-Type' : 'application/json',
															'X-HTTP-Method-Override' : 'DELETE'
														},
														success : function(
																result) {
															if (result == 'success') {
																alert('댓글 삭제성공')
																getAllReplies();
															} // end if()
														}// end success()

													}); // end ajax()
										}); // end btn_delte.click()

						//end 댓글모달 영역
					});//end function
</script>