<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- DataSource Bean -->
	<bean id="ds" class="oracle.jdbc.pool.OracleDataSource"
		destroy-method="close">
		<property name="dataSourceName" value="ds" />
		<property name="URL"
			value="jdbc:oracle:thin:@localhost:1521:orcl" />
		<property name="user" value="scott" />
		<property name="password" value="tiger" />
	</bean>

	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<property name="configLocation"
			value="classpath:/mybatis-config.xml" />
		<property name="mapperLocations"
			value="classpath:mappers/*.xml" />
		<!-- classpath : src/main/resources -->
	</bean>

	<!-- Mybatis에서 사용하는 SqlSession Bean -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache">
		<constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory" />
	</bean>

	<!-- Spring에서 제공하는 DB Transtaction Manager를 bean으로 등록 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"></property>
	</bean>

	<!-- 트렌젝션 관리를 하는 Aspect를 annotation 기반으로 사용 -->
	<tx:annotation-driven/>

	<!-- base-package 밑의 클래스들 중에서 @Component로 등록된 클래스들을 bean으로 생성해서 관리 Persistence/Service 
		Layer의 컴퍼넌트 클래스들을 bean으로 등록 -->
	<context:component-scan
		base-package="edu.spring.homeshare" />

</beans>


















