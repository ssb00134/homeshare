<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="edu.spring.homeshare.HouseMapper">

	<!-- 기본규칙 value : '_' 사용 , name : 카멜케이스 -->



	<!-- 기본 select문 -->
	<!-- 하우스번호, 숙소타입, 제목, 내용 -->
	<select id="select_by_title" resultType="HouseVO">
		select * from ${house}
		where ${title}= #{title}
	</select>

	<select id="select_all" resultType="HouseVO">
		select * from ${house}
	</select>

	<select id="select_by_houseno" resultType="houseVO"
		parameterType="int">
		select * from ${house} where ${houseNo} = #{houseNo}
	</select>

	<!-- memno 기준으로 모든 하우스 정보를 가져오는 쿼리 -->
	<select id="select_all_by_memno" resultType="houseVO"
		parameterType="int">
		select * from ${house} where ${memNo} = #{memNo}
	</select>

	<!-- 검색 쿼리 영역 기본값 location -->
	<!-- location -->
	<select id="select_by_location" resultType="houseVO">
		<!-- SELECT * FROM house WHERE location LIKE '%수원%'; -->
		SELECT * FROM ${house} WHERE ${location} LIKE '%#{location}%'
	</select>

	<!-- 다중쿼리문 -->
	<select id="multy_select" parameterType="java.util.HashMap"
		resultType="houseVO">
		SELECT * FROM ${house}
		<where>
			location like '%' || #{location} || '%'
			<if test='bookableDateBegin != null and bookableDateBegin != ""'>
				AND ${bookableDateBegin} <![CDATA[>=]]>
				#{bookableDateBegin}
			</if>
			<if test='bookableDateEnd != null and bookableDateEnd != ""'>

				AND ${bookableDateEnd} <![CDATA[<=]]>
				#{bookableDateEnd}
			</if>
			<if test="#{maxCapacity} != null">
				AND ${maxCapacity} <![CDATA[<=]]>
				maxCapacity
			</if>
		</where>
	</select>

	<!-- 페이징 처리 -->
	<select id="paging" resultType="houseVO">
		select
		*
		from (
		select rownum rn,
		a.*
		from (
		select * from house order by
		${houseNo} desc
		) a
		) b
		where rn
		between #{start} and #{end}
	</select>

	<!-- 페이지 처리 + 다중검색 -->
	<select id="paging_multy_select" resultType="houseVO"
		parameterType="java.util.HashMap">
		select
		*
		from (
		select rownum rn,
		a.*
		from (
		<!-- 다중검색 start -->
		SELECT * FROM ${house}
		<where>
			location like '%' || #{location} || '%'
			<if test='bookableDateBegin != null and bookableDateBegin != ""'>
				AND ${bookableDateBegin} <![CDATA[>=]]>
				#{bookableDateBegin}
			</if>
			<if test='bookableDateEnd != null and bookableDateEnd != ""'>

				AND ${bookableDateEnd} <![CDATA[<=]]>
				#{bookableDateEnd}
			</if>
			<if test="#{maxCapacity} != null">
				AND ${maxCapacity} <![CDATA[<=]]>
				maxCapacity
			</if>
		</where>
		<!-- 다중검색 end -->
		) a
		) b
		where rn
		between #{start} and #{end}
	</select>



	<select id="total_count" resultType="Integer">
		select count(*) total_cnt
		from ${house}
	</select>


	<select id="total_count_multy_select" resultType="Integer">
		select count(*) total_cnt
		from ${house}
		<where>
			location like '%' || #{location} || '%'
			<if test='bookableDateBegin != null and bookableDateBegin != ""'>
				AND ${bookableDateBegin} <![CDATA[>=]]>
				#{bookableDateBegin}
			</if>
			<if test='bookableDateEnd != null and bookableDateEnd != ""'>

				AND ${bookableDateEnd} <![CDATA[<=]]>
				#{bookableDateEnd}
			</if>
			<if test="#{maxCapacity} != null">
				AND ${maxCapacity} <![CDATA[<=]]>
				maxCapacity
			</if>
		</where>
	</select>







	<!-- select count house의 memno 구하기 -->
	<select id="selectcount_house_by_memno_no" resultType="Integer">
		SELECT
		COUNT(*)
		FROM ${house}
		where ${memNo} = #{memNo}
	</select>

	<!-- 인서트 -->
	<insert id="insert">
		insert into ${house}
		values(
		#{houseNo},
		#{type},
		#{scope},
		#{maxCapacity},
		#{bedroom},
		#{bed},
		#{bathroom},
		#{utilities},
		#{spaces},
		#{title},
		#{info},
		#{rules},
		#{checkinTime},
		#{checkoutTime},
		#{stayNight},
		#{stayDay},
		#{bookableDateBegin},
		#{bookableDateEnd},
		#{price},
		#{memNo},
		#{replies},
		#{image},
		#{checkinInterval},
		#{score},
		#{location}
		)
	</insert>



</mapper>
